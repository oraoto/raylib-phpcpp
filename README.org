* raylib-phpcpp

PHP bindings for [[https://github.com/raysan5/raylib/][raylib]], a simple and easy-to-use library to learn videogames programming.

It's developed using [[https://github.com/CopernicaMarketingSoftware/PHP-CPP/][PHP-CPP]], so it's called raylib-phpcpp.

** Example

#+BEGIN_SRC php
<?php

InitWindow(800, 450, "raylib [core] example - basic window");

SetTargetFPS(60);

while (!WindowShouldClose())
{
    BeginDrawing();
    ClearBackground(RAYWHITE());
    DrawText("Congrats! You created your first window!", 190, 200, 20, LIGHTGRAY());
    EndDrawing();
}
CloseWindow();
#+END_SRC

See more [[./examples][examples]].

** Mapping C to PHP

- All C functions are exposed as PHP global functions, for example:

  | C                             | PHP                           |
  |-------------------------------+-------------------------------|
  | WindowShouldClose()           | WindowShouldClose()           |
  | InitWindow(800, 450, "title") | InitWindow(800, 450, "title") |

  Since ~ImageCopy~ and ~ImageCrop~ conflicted with [[https://www.php.net/manual/en/book.image][gd]], you can't raylib-phpcpp and gd at the same time.

- Color constants are exposed as global functions, for example:

  | C         | PHP         |
  |-----------+-------------|
  | LIGHTGRAY | LIGHTGRAY() |
  | GREEN     | GREEN()     |

- Constructor for simple structs (struct without array and pointer members) are exposed as function, for example to create a ~Camera2D~:

  #+BEGIN_SRC php
  <?php

  $offset = Vector2(1, 1);
  $target = Vector2(0, 0);
  $camera = Camera2D($offset, $target, 1.0, 1.0);
  #+END_SRC

- All C enums are exposed global constants:

  | C              | PHP            |
  |----------------+----------------|
  | FLAG_SHOW_LOGO | FLAG_SHOW_LOGO |
  | KEY_COMMA      | KEY_COMMA      |

- Accessor for struct fields are implemented as ~__get~ and ~__set~, some update operation are more cumbersome:

  #+BEGIN_SRC php
  <?php

  $v = Vector2(1, 2);
  // $v->x += 1; doesn't work
  $v->x = $v->x + 1;

  $camera = Camera2D(Vector2(1, 1), Vector2(0, 0), 1.0, 1.0);
  // $camera->target->x = 1; // doesn't work
  $target = $camera->target;
  $target->x = 1;
  $camera->target = $target;
  #+END_SRC

** Completeness

The binding is auto-generated from ~raylib.h~, most functions and features are supported. Not supported function are commented out.

For most file and text functions, you can use counterparts in PHP.

** Building From Source

Requirements:

+ PHP 7.4
+ PHP-CPP 2.2.0
+ raylib 3.0

** License

raylib-phpcpp is licensed under an unmodified zlib/libpng license, which is an OSI-certified, BSD-like license that allows static linking with closed source software. Check [[./LICENSE][LICENSE]] for further details.
